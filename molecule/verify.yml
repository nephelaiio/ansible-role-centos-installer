---
- name: Verify iso creation

  hosts: all

  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:

    - name: retrieve iso status
      stat:
        path: "{{ centos_installer_target_dir }}/{{ vm.centos_installer_hostname }}.iso"
      vars:
        centos_installer_target_dir: "{{ playbook_dir }}"
      loop_control:
        loop_var: vm
        label: "{{ vm.centos_installer_hostname }}"
      loop: "{{ vms }}"
      register: vm_isos

    - name: verify iso creation
      assert:
        that:
          - vm_iso.stat.exists | bool
      loop_control:
        loop_var: vm_iso
        label: "{{ vm_iso.stat.path }}"
      loop: "{{ vm_isos.results }}"


- name: Add vms to inventory

  hosts: all

  become: yes

  vars_files:
    - ./vars.yml

  tasks:

    - block:

        - name: add vm to inventory
          add_host:
            name: "{{ vm_hostname }}"
            groups:
              - install
            ansible_host: "{{ vm_address }}"
            ansible_user: molecule
            ansible_ssh_private_key_file: "{{ ssh_keypair }}"
            ansible_ssh_common_args: "-o ProxyCommand=\"ssh -W %h:%p -q {{ ansible_user }}@{{ ansible_default_ipv4.address }}\""
            centos_partitioning_method: "{{ vm.centos_partitioning_method }}"
          vars:
            vm_hostname: "{{ vm.centos_installer_hostname }}"
            vm_address: "{{ vm.centos_installer_interface.ipaddress }}"
          loop_control:
            loop_var: vm
            label: "{{ vm.centos_installer_hostname }}"
          loop: "{{ vms }}"

      when: kvm_enabled | bool


- name: Test vms

  hosts: install

  gather_facts: no

  tasks:

    - name: test connection
      wait_for_connection:
        sleep: 10

    - name: gather partition info
      shell: "lsblk -l | grep /$"
      register: lsblk_output

    - name: check static partitioning
      fail:
        msg: "regular partitioning failed: {{ lsblk_output.stdout }}"
      when:
        - lsblk_output.stdout is not search('part')
        - centos_partitioning_method == 'regular'

    - name: check lvm partitioning
      fail:
        msg: "lvm partitioning failed: {{ lsblk_output.stdout }}"
      when:
        - lsblk_output.stdout is not search('lvm')
        - centos_partitioning_method == 'lvm'
