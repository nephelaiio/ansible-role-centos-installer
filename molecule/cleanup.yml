---
- name: Probe hosts

  hosts: all

  gather_facts: no

  tasks:

    - block:

        - name: probe hosts
          wait_for_connection:
            timeout: 10

        - name: record online hosts
          group_by:
            key: "running_hosts"

      rescue:

        - name: record offline hosts
          debug:
            msg: "{{ inventory_hostname }} is offline"


- name: Prepare

  hosts: running_hosts

  become: yes

  vars_files:
    - vars.yml

  tasks:

    - name: destroy kvm guest
      virt:
        command: destroy
        name: "{{ vm.centos_installer_hostname }}"
      loop_control:
        loop_var: vm
        label: "{{ vm.centos_installer_hostname }}"
      loop: "{{ vms }}"
      failed_when: false

    - name: undefine kvm guest
      virt:
        command: undefine
        name: "{{ vm.centos_installer_hostname }}"
      loop_control:
        loop_var: vm
        label: "{{ vm.centos_installer_hostname }}"
      loop: "{{ vms }}"
      failed_when: false

    - name: destroy kvm guest disks
      file:
        path: "{{ vm_disk }}"
        state: absent
      vars:
        vm_disk: "{{ playbook_dir }}/{{ vm.centos_installer_hostname }}.img"
      loop_control:
        loop_var: vm
        label: "{{ vm.centos_installer_hostname }}"
      loop: "{{ vms }}"

    - name: dnat ssh preroute
      iptables:
        table: nat
        chain: PREROUTING
        destination_port: "{{ (ssh_port_base | int) + (port_offset | int) }}"
        to_destination: "{{ item.centos_installer_interface.ipaddress }}:22"
        jump: DNAT
        protocol: tcp
        state: absent
      loop_control:
        index_var: port_offset
        label: "{{ item.centos_installer_hostname }}"
      loop: "{{ vms }}"

    - name: dnat ssh output
      iptables:
        table: nat
        chain: OUTPUT
        destination_port: "{{ (ssh_port_base | int) + (port_offset | int) }}"
        to_destination: "{{ item.centos_installer_interface.ipaddress }}:22"
        jump: DNAT
        protocol: tcp
        state: absent
      loop_control:
        index_var: port_offset
        label: "{{ item.centos_installer_hostname }}"
      loop: "{{ vms }}"

    - name: unmasquerade bridge
      iptables:
        table: nat
        chain: POSTROUTING
        out_interface: "{{ ansible_default_ipv4.interface }}"
        source: "{{ bridge_net }}"
        destination: 0.0.0.0/0
        jump: MASQUERADE
        protocol: all
        state: present

    - name: destroy dummy bridge
      command: "nmcli con del {{ bridge_name }}"
      failed_when: false

    - name: destroy dummy interface
      command: "ip link del {{ iface_name }}"
      failed_when: false
