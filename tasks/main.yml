---
- name: include variable overrides
  include_vars: "{{ lookup('first_found', lookup_files) }}"
  vars:
    lookup_files:
      - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      - "vars/{{ ansible_distribution }}.yml"
      - "vars/{{ ansible_os_family }}.yml"
      - "vars/default.yml"

- name: install packages
  package:
    name: "{{ item }}"
    state: "{{ centos_installer_package_state }}"
  with_items: "{{ centos_installer_packages | default(centos_installer_packages_default) }}"

- name: create temporary target directory
  tempfile:
    state: directory
    prefix: iso
  register: tmpdir_dest

- name: create centos image target directory
  file:
    state: directory
    path: "{{ centos_installer_target_dir }}"

- name: register default centos urls
  set_fact:
    iso_url: "{{ centos_installer_image }}"

- name: register source centos iso file
  set_fact:
    iso_path: "{{ centos_installer_target_dir }}/centos.iso"

- name: fetch centos source iso
  get_url:
    url: "{{ centos_installer_image_url | default(iso_url) }}"
    dest: "{{ iso_path }}"

- name: create temporary mount fstab
  tempfile:
    state: directory
    prefix: fstab
  register: mntfile_dest

- name: create temporary mount directory
  tempfile:
    state: directory
    prefix: mnt
  register: mntdir_dest

- name: mount centos source iso
  mount:
    src: "{{ iso_path }}"
    path: "{{ mntdir_dest.path }}"
    state: mounted
    opts: loop
    fstype: iso9660

- name: extract source iso files
  command: "cp -a {{ mntdir_dest.path }}/. {{ tmpdir_dest.path }}/"
  args:
    warn: no
  tags:
    - skip_ansible_lint

- name: unmount centos source iso
  mount:
    src: "{{ iso_path }}"
    path: "{{ mntdir_dest.path }}"
    state: unmounted
    opts: loop

- name: remove temporary mount directory
  file:
    path: "{{ mntdir_dest.path }}"
    state: absent

- name: remove temporary mount fstab
  file:
    path: "{{ mntfile_dest.path }}"
    state: absent

- name: check isolinux configuration file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name isolinux.cfg"
  register: isolinux_cfgdest
  changed_when: false

- name: configure isolinux
  lineinfile:
    path: "{{ isolinux_cfgdest.stdout }}"
    regexp: 'timeout\s+[0-9]+'
    line: 'timeout 1'

- name: register kickstart file location
  set_fact:
    ks_file: "ks.cfg"

- name: create kickstart file
  template:
    src: "{{ centos_installer_ks_template }}"
    dest: "{{ tmpdir_dest.path }}/{{ ks_file }}"
  vars:
    volume: "{{ centos_installer_iso_volume }}"
    hostname: "{{ centos_installer_hostname }}"
    timezone: "{{ centos_installer_timezone }}"
    username: "{{ centos_installer_username }}"
    password: "{{ centos_installer_password }}"
    root_password: "{{ centos_root_password | default(centos_installer_password) }}"
    homedir: "{{ centos_installer_userhome | default('/home/' + centos_installer_username) }}"
    sshkey: "{{ centos_installer_sshkey }}"
    interface: "{{ centos_installer_interface }}"
    halt: "{{ centos_installer_halt | default('false') }}"
    keyboard: "{{ centos_installer_ks_keyboard }}"
    disk: "{{ centos_installer_disk }}"
    baseurl: "{{ centos_installer_baseurl | default('') }}"
    partitioning: "{{ centos_installer_ks_partitioning }}"
    kickstart_extra: "{{ centos_installer_ks_extra | default('') }}"

- name: check isolinux boot file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name isolinux.cfg"
  register: isolinux_bootdest
  changed_when: false

- name: set bootloader kickstart configuration
  template:
    src: isolinux.cfg.j2
    dest: "{{ isolinux_bootdest.stdout }}"
  vars:
    ks_url: "cdrom:/{{ ks_file }}"
    volume: "{{ centos_installer_iso_volume }}"

- name: check isolinux bin file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name isolinux.bin"
  register: isolinux_bindest
  changed_when: false

- name: check isolinux boot cat file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name boot.cat"
  register: isolinux_bootcatdest
  changed_when: false

- name: compute isolinux bin
  set_fact:
    isolinux_bin: "{{ isolinux_bindest.stdout | regex_replace(tmpdir_dest.path + '/', '') }}"
    isolinux_cat: "{{ isolinux_bootcatdest.stdout | regex_replace(tmpdir_dest.path + '/', '') }}"

- name: create centos autoinstall iso
  command: "{{ mkisofs_cmd }} -V '{{ centos_installer_iso_volume }}' -b {{ isolinux_bin }} -c {{ isolinux_cat }} -o {{ mkisofs_out }} ."
  args:
    chdir: "{{ tmpdir_dest.path }}"
  vars:
    mkisofs_cmd: "mkisofs -J -R -v -T -no-emul-boot -boot-load-size 4 -boot-info-table"
    mkisofs_out: "{{ centos_installer_target_dir }}/{{ centos_installer_target_filename }}"
  changed_when: false

- name: make iso bootable
  command: "isohybrid {{ centos_installer_target_dir }}/{{ centos_installer_target_filename }}"
  changed_when: false

- name: implant iso md5sum
  command: "implantisomd5 {{ centos_installer_target_dir }}/{{ centos_installer_target_filename }}"
  changed_when: false

- name: remove temporary directories
  file:
    path: "{{ tmpdir_dest.path }}"
    state: absent
